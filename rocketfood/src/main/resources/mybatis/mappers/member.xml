<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">
	
	<!-- 로그인 -->
	<select id="login" resultType="memberVO"  parameterType="java.util.Map"  >
	    <![CDATA[
			select * from member 
			where member_id=#{member_id} 
			and member_pw=#{member_pw}	
		]]>
	</select>
	
	<!-- 아이디로 회원 정보 조회 -->
	<select id="selectMemberById" parameterType="String" resultType="memberVO">
		<![CDATA[
		select * from member
		where member_id=#{member_id}   
		]]>
	</select>
	
	<!-- 아이디로 회원 권한 정보 조회 -->
	<select id="selectMemberAuth" resultType="String" parameterType="String"  >
	    <![CDATA[
			select authority from member_auth 
			where member_id=#{member_id}	
		]]>
	</select>
	
	<!-- 아이디 중복 조회-->
	<select id="selectOverlappedID" parameterType="String" resultType="String">
	   <![CDATA[
	   SELECT 
	   CASE count(*)
         	WHEN 1 THEN 'true'
         	WHEN 0 THEN 'false'
       	END
		FROM member
		WHERE member_id = #{member_id}
		]]>
	</select>
	
	<!-- 아이디, 이메일로 회원 아이디 조회 -->
	<select id="selectMemberByIdAndEmail" parameterType="java.util.Map" resultType="memberVO">
		<![CDATA[
		select * from member
		where member_id=#{member_id}
		and member_email=#{member_email}
		and socialMember is null
		]]>
	</select>
	
	<!-- 이름, 이메일로 회원 아이디 조회 -->
	<select id="selectMemberByEmailAndName" parameterType="java.util.Map" resultType="memberVO">
		<![CDATA[
		select * from member
		where member_email=#{member_email}
		and member_name = #{member_name}
		and socialMember is null
		]]>
	</select>	
	
	<!-- 아이디로 회원 등급 조회 -->
	<select id="selectGradeById" parameterType="String" resultType="gradeVO">
		<![CDATA[
		select g.* 
		from member_grade as g, member as m
		where m.grade_id=g.grade_id and
		m.member_id = #{member_id}   
		]]>
	</select>
	
	<!-- 아이디로 회원의 사용 가능한 포인트 조회 -->
	<select id="selectPoint" parameterType="String" resultType="int">
		<![CDATA[
		SELECT SUM(current_point) FROM point
		WHERE member_id = #{member_id}
		GROUP BY member_id
		]]>
	</select>
		
	<!-- 새 비밀번호 변경 -->	
	<update id="updateChangePwd" parameterType="memberVO">
		<![CDATA[
			update member
			set member_pw=#{member_pw}, modified_date= CURDATE()
			where member_id=#{member_id}
		]]>
	</update>
	
	<!-- 회원 추가 하기 -->
	<insert id="insertNewMember" parameterType="memberVO">
	<![CDATA[
    insert into member(member_id,
			 		   member_pw,
                       member_name,
                       member_email,
                       member_phone,
                       member_birth,
                       business_name,
                       business_regNum,
                       business_category,
                       manager_name,
                       manager_phone,
                       manager_email,
                       socialMember
					)
					values(#{member_id},
					   #{member_pw},
					   #{member_name},
					   #{member_email},
					   #{member_phone},
					   #{member_birth},
					   #{business_name},
					   #{business_regNum},
					   #{business_category},
					   #{manager_name},
					   #{manager_phone},
					   #{manager_email},
					   #{socialMember}
					)                                      
	]]>      
	</insert>
	
	<!-- 새 주소 추가하기 -->
	<insert id="insertNewAddress" parameterType="addressVO">
		<selectKey resultType="int" keyProperty="address_id" order="BEFORE">
	    	select ifnull(max(address_id), 0)+1 from address
		</selectKey>
		<![CDATA[
			insert into address(address_id,
								zip_code,
								roadAddress,
								jibunAddress,
								detalied_address,
								is_basic_address,
								member_id,
								receiver_name,
								receiver_phone							
							) values(#{address_id},
								#{zip_code},
								#{roadAddress},
								#{jibunAddress},
								#{detalied_address},
								#{is_basic_address},
								#{member_id},
								#{receiver_name},
								#{receiver_phone}
							)
		]]>  
	</insert>
	
	<!-- 회원 정보 변경하기 추가해야함 -->
	
	
	<!-- 회원 아이디로 주소 목록 불러오기 -->
	<select id="selectAddressList" parameterType="String" resultType="addressVO">
		<![CDATA[
		select * from address
		where member_id = #{member_id}
		]]>
	</select>
	
	<!-- 주소 아이디로 주소 불러오기 -->
	<select id="selectAddressByAddressId" parameterType="int" resultType="addressVO">
		<![CDATA[
		select * from address
		where address_id = #{address_id}
		]]>
	</select>
	
	<!-- 회원 아이디로 기본 주소 불러오기 -->
	<select id="selectBasicAddress" parameterType="String" resultType="addressVO">
		<![CDATA[
		select * from address
		where member_id = #{member_id}
		and is_basic_address = 'y'
		]]>
	</select>
	
	<!-- 등록된 주소 수정하기 -->
	<update id="updateAddress" parameterType="int">
		update address
			set 
			<if test="zip_code != null">zip_code = #{zip_code},</if>
			<if test="roadAddress != null">roadAddress = #{roadAddress},</if>
			<if test="jibunAddress != null">jibunAddress = #{jibunAddress},</if>
			<if test="detalied_address != null">detalied_address = #{detalied_address},</if>
			<if test="is_basic_address != null">is_basic_address = #{is_basic_address},</if>
			<if test="receiver_name != null">receiver_name = #{receiver_name},</if>
			<if test="receiver_phone != null">receiver_phone = #{receiver_phone},</if>
			modified_date= CURDATE()
			where address_id=#{address_id}
	</update>
	
	<update id="basicAddressN">
		<![CDATA[
		update address
		set is_basic_address = 'n'
		]]>
	</update>
	
	<update id="updateBasicAddress">
		<![CDATA[
		update address
		set is_basic_address = 'y'
		where address_id =#{address_id}
		]]>
	</update>
	
	<!-- 등록된 주소 삭제하기 -->
	<delete id="deleteAddress" parameterType="int">
		<![CDATA[
		delete from address
		where address_id = #{address_id}
		]]>
	</delete>
	
	
	<!-- 카카오 로그인 하는 회원 정보 추가하기 -->
	<insert id="insertNewMemberByKakao"  parameterType="memberVO">
	<![CDATA[
    insert into member(member_id,
                       member_name,
                       member_email,
                       socialMember
					)
					values(#{member_id},
						#{member_name},
						#{member_email},
						#{socialMember}
	     			)                                      
	]]>      
	</insert>
	
</mapper>